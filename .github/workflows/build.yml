name: Build

on:
  push:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

env:
  # list of platforms supported by our base image nginx:alpine
  architectures: '[\"linux/amd64\", \"linux/arm/v6\", \"linux/arm/v7\", \"linux/arm64/v8\", \"linux/ppc64le\", \"linux/s390x\"]'

jobs:
  cancel_redundant:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  # This dumb job exists because env isn't available in the matrix context, sigh
  # https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson
  vars:
    name: Set Env Vars
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ fromJson(env.architectures) }}
    steps:
      - name: Set Env Vars
        id: set
        run: |
          echo "::set-output name=architectures::${{ env.architectures }}"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: vars
    strategy:
      matrix:
        architecture: ${{ needs.vars.outputs.architectures }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1.2.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          buildkitd-flags: --debug

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # nginx-alpine-amplify
      - name: Docker meta (nginx-alpine-amplify)
        id: meta-conf
        uses: docker/metadata-action@v3.7.0
        with:
          images: makeshift27015/nginx-alpine-amplify
          tags: |
            type=schedule,suffix=${{ matrix.architecture }}
            type=ref,event=branch,suffix=${{ matrix.architecture }}
            type=ref,event=tag,suffix=${{ matrix.architecture }}
            type=ref,event=pr,suffix=${{ matrix.architecture }}
            type=sha,prefix=,suffix=${{ matrix.architecture }}
            type=sha,prefix=,format=long,suffix=${{ matrix.architecture }}

      - name: Push Container (nginx-alpine-amplify)
        if: success()
        uses: docker/build-push-action@v2.10.0
        with:
          tags: ${{ steps.meta-conf.outputs.tags }}
          labels: ${{ steps.meta-conf.outputs.labels }}
          platforms: ${{ matrix.architecture }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          pull: true

  # build_manifest:
  #   runs-on: ubuntu-last
  #   steps:
  #     - name: Create and push manifest images
  #       uses: Noelware/docker-manifest-action@master # or use whatever version.
  #       with:
  #         base-image: namespace/image:latest
  #         extra-images: namespace/image:latest-amd64,namespace/image:latest-arm64,namespace/image:latest-armv7
  #         push: true
# set latest tag for master branch
#type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

# docs:
#   name: Build
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Update DockerHub Repo Description (nginx-alpine-amplify)
#       if: success()
#       uses: peter-evans/dockerhub-description@v2
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_PASSWORD }}
#         repository: makeshift27015/nginx-alpine-amplify
#         readme-filepath: Readme.md
#         short-description: "Nginx on Alpine with Amplify included, because Nginx itself doesn't offer that"
